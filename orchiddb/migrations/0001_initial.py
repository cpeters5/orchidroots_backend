# Generated by Django 3.0.8 on 2020-08-06 14:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import mptt.fields
import orchiddb.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Continent',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('note', models.CharField(blank=True, max_length=500, null=True)),
                ('source', models.CharField(blank=True, max_length=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('dist_code', models.CharField(max_length=3, primary_key=True, serialize=False)),
                ('dist_num', models.IntegerField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('orig_code', models.CharField(blank=True, max_length=100, null=True)),
                ('uncertainty', models.CharField(blank=True, max_length=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('modified_date', models.DateTimeField(auto_now=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(choices=[('Stripe', 'Stripe'), ('Paypal', 'Paypal')], default='Stripe', max_length=10)),
                ('source_id', models.CharField(blank=True, max_length=255, null=True)),
                ('donor_display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(choices=[('Accepted', 'Accepted'), ('Rejected', 'Rejected'), ('Cancelled', 'Cancelled'), ('Refunded', 'Refunded'), ('Pending', 'Pending'), ('Unverified', 'Unverified')], default='Unverified', max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=5)),
                ('country_code', models.CharField(blank=True, max_length=2, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('family', models.CharField(db_column='family', default='', max_length=50, primary_key=True, serialize=False)),
                ('author', models.CharField(blank=True, max_length=200)),
                ('year', models.IntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['family'],
            },
        ),
        migrations.CreateModel(
            name='Genus',
            fields=[
                ('pid', models.IntegerField(primary_key=True, serialize=False)),
                ('is_hybrid', models.CharField(max_length=1, null=True)),
                ('genus', models.CharField(default='', max_length=50)),
                ('author', models.CharField(default='', max_length=200)),
                ('citation', models.CharField(default='', max_length=200)),
                ('cit_status', models.CharField(max_length=20, null=True)),
                ('alliance', models.CharField(default='', max_length=50)),
                ('status', models.CharField(default='', max_length=20)),
                ('type', models.CharField(default='', max_length=20)),
                ('description', models.TextField(null=True)),
                ('distribution', models.TextField(null=True)),
                ('text_data', models.TextField(null=True)),
                ('source', models.CharField(default='', max_length=50)),
                ('abrev', models.CharField(default='', max_length=50)),
                ('year', models.IntegerField(null=True)),
                ('num_species', models.IntegerField(default=0, null=True)),
                ('num_species_synonym', models.IntegerField(default=0, null=True)),
                ('num_species_total', models.IntegerField(default=0, null=True)),
                ('num_hybrid', models.IntegerField(default=0, null=True)),
                ('num_hybrid_synonym', models.IntegerField(default=0, null=True)),
                ('num_hybrid_total', models.IntegerField(default=0, null=True)),
                ('num_synonym', models.IntegerField(default=0, null=True)),
                ('num_spcimage', models.IntegerField(default=0, null=True)),
                ('num_spc_with_image', models.IntegerField(default=0, null=True)),
                ('pct_spc_with_image', models.DecimalField(decimal_places=2, default=0, max_digits=7, null=True)),
                ('num_hybimage', models.IntegerField(default=0, null=True)),
                ('num_hyb_with_image', models.IntegerField(default=0, null=True)),
                ('pct_hyb_with_image', models.DecimalField(decimal_places=2, default=0, max_digits=7, null=True)),
                ('notepad', models.CharField(default='', max_length=500)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('family', models.ForeignKey(db_column='family', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Family')),
            ],
            options={
                'ordering': ('genus',),
            },
        ),
        migrations.CreateModel(
            name='GeoLoc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geo_id', models.CharField(blank=True, max_length=10, null=True, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('note', models.CharField(blank=True, max_length=500, null=True)),
                ('source', models.CharField(blank=True, max_length=20, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Infragen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_pid', models.IntegerField(default=0)),
                ('version', models.IntegerField(default=1)),
                ('genus', models.CharField(max_length=50, null=True)),
                ('infragen', models.CharField(max_length=50)),
                ('rank', models.CharField(max_length=10)),
                ('author', models.CharField(max_length=200, null=True)),
                ('citation', models.CharField(max_length=200, null=True)),
                ('year', models.IntegerField(null=True)),
                ('source', models.CharField(max_length=50, null=True)),
                ('description', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('gen', models.ForeignKey(db_column='gen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
            ],
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('author_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('fullname', models.CharField(max_length=50)),
                ('affiliation', models.CharField(blank=True, max_length=200)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('web', models.CharField(blank=True, max_length=200)),
                ('status', models.CharField(default='TBD', max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('expertise', models.CharField(max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('note', models.CharField(blank=True, max_length=500, null=True)),
                ('source', models.CharField(blank=True, max_length=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('continent', models.ForeignKey(blank=True, db_column='continent', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Continent')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('pid', models.IntegerField(null=True)),
                ('sec', models.IntegerField(db_column='sec', default=0)),
                ('section', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('author', models.CharField(max_length=200, null=True)),
                ('citation', models.CharField(max_length=200, null=True)),
                ('year', models.IntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('distribution', models.TextField(blank=True)),
                ('genus', models.CharField(max_length=50, null=True)),
                ('source', models.CharField(max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('gen', models.ForeignKey(db_column='gen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
            ],
            options={
                'ordering': ['section'],
            },
        ),
        migrations.CreateModel(
            name='Species',
            fields=[
                ('pid', models.IntegerField(primary_key=True, serialize=False)),
                ('source', models.CharField(max_length=10)),
                ('genus', models.CharField(max_length=50)),
                ('is_hybrid', models.CharField(max_length=1, null=True)),
                ('species', models.CharField(max_length=50)),
                ('infraspr', models.CharField(max_length=20, null=True)),
                ('infraspe', models.CharField(max_length=50, null=True)),
                ('author', models.CharField(max_length=200)),
                ('originator', models.CharField(blank=True, max_length=100)),
                ('citation', models.CharField(max_length=200)),
                ('cit_status', models.CharField(max_length=20, null=True)),
                ('status', models.CharField(choices=[('accepted', 'accepted'), ('registered', 'registered'), ('nonregistered', 'nonregistered'), ('unplaced', 'unplaced'), ('published', 'published'), ('trade', 'trade')], default='', max_length=20)),
                ('type', models.CharField(choices=[('species', 'species'), ('hybrid', 'hybrid')], default='', max_length=10)),
                ('year', models.IntegerField(null=True)),
                ('date', models.DateField(null=True)),
                ('distribution', models.TextField(blank=True)),
                ('physiology', models.CharField(blank=True, max_length=200)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('url_name', models.CharField(blank=True, max_length=100)),
                ('num_image', models.IntegerField(blank=True)),
                ('num_ancestor', models.IntegerField(blank=True, null=True)),
                ('num_species_ancestor', models.IntegerField(blank=True, null=True)),
                ('num_descendant', models.IntegerField(blank=True, null=True)),
                ('num_dir_descendant', models.IntegerField(blank=True, null=True)),
                ('notepad', models.CharField(default='', max_length=500)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('gen', models.ForeignKey(db_column='gen', default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
            ],
        ),
        migrations.CreateModel(
            name='Subfamily',
            fields=[
                ('subfamily', models.CharField(db_column='subfamily', default='', max_length=50, primary_key=True, serialize=False)),
                ('author', models.CharField(blank=True, max_length=200)),
                ('year', models.IntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('family', models.ForeignKey(db_column='family', default='', on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Family')),
            ],
            options={
                'ordering': ['subfamily'],
            },
        ),
        migrations.CreateModel(
            name='Subgenus',
            fields=[
                ('pid', models.IntegerField(null=True)),
                ('subgen', models.IntegerField(db_column='subgen', default=0)),
                ('subgenus', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('author', models.CharField(max_length=200, null=True)),
                ('citation', models.CharField(max_length=200, null=True)),
                ('year', models.IntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('distribution', models.TextField(null=True)),
                ('genus', models.CharField(max_length=50, null=True)),
                ('source', models.CharField(max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('gen', models.ForeignKey(db_column='gen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
            ],
            options={
                'ordering': ['subgen'],
            },
        ),
        migrations.CreateModel(
            name='Accepted',
            fields=[
                ('pid', models.OneToOneField(db_column='pid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='orchiddb.Species')),
                ('genus', models.CharField(max_length=50)),
                ('species', models.CharField(max_length=50)),
                ('infraspr', models.CharField(max_length=20, null=True)),
                ('infraspe', models.CharField(max_length=50, null=True)),
                ('is_hybrid', models.CharField(max_length=1, null=True)),
                ('distribution', models.TextField(blank=True)),
                ('is_type', models.BooleanField(default=False, null=True)),
                ('physiology', models.CharField(blank=True, max_length=200, null=True)),
                ('url', models.CharField(blank=True, max_length=200, null=True)),
                ('url_name', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('common_name', models.CharField(blank=True, max_length=100, null=True)),
                ('local_name', models.CharField(blank=True, max_length=100, null=True)),
                ('bloom_month', models.CharField(blank=True, max_length=200, null=True)),
                ('size', models.CharField(blank=True, max_length=50, null=True)),
                ('color', models.CharField(blank=True, max_length=50, null=True)),
                ('fragrance', models.CharField(blank=True, max_length=50, null=True)),
                ('altitude', models.CharField(blank=True, max_length=50, null=True)),
                ('history', models.TextField(blank=True, null=True)),
                ('analysis', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('etymology', models.TextField(blank=True, null=True)),
                ('culture', models.TextField(blank=True, null=True)),
                ('intrasource', models.CharField(max_length=10)),
                ('num_image', models.IntegerField(blank=True, null=True)),
                ('num_descendant', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Culture',
            fields=[
                ('pid', models.OneToOneField(db_column='pid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='orchiddb.Species')),
                ('temperature', models.CharField(blank=True, max_length=100)),
                ('light', models.CharField(blank=True, max_length=100)),
                ('water', models.CharField(blank=True, max_length=100)),
                ('winter_care', models.CharField(blank=True, max_length=100)),
                ('bloom_month', models.CharField(blank=True, max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='GenusRelation',
            fields=[
                ('gen', models.OneToOneField(db_column='gen', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='orchiddb.Genus')),
                ('genus', models.CharField(default='', max_length=50)),
                ('parentlist', models.CharField(max_length=500, null=True)),
                ('formula', models.CharField(max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InfragenHybrid',
            fields=[
                ('pid', models.OneToOneField(db_column='pid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='orchiddb.Species')),
                ('genus', models.CharField(blank=True, max_length=50, null=True)),
                ('species', models.CharField(blank=True, max_length=50, null=True)),
                ('subfamily', models.CharField(blank=True, max_length=500, null=True)),
                ('tribe', models.CharField(blank=True, max_length=500, null=True)),
                ('subtribe', models.CharField(blank=True, max_length=500, null=True)),
                ('subgenus', models.CharField(blank=True, max_length=500, null=True)),
                ('section', models.CharField(blank=True, max_length=500, null=True)),
                ('subsection', models.CharField(blank=True, max_length=500, null=True)),
                ('series', models.CharField(blank=True, max_length=500, null=True)),
                ('sf_pct', models.CharField(blank=True, max_length=500, null=True)),
                ('t_pct', models.CharField(blank=True, max_length=500, null=True)),
                ('st_pct', models.CharField(blank=True, max_length=500, null=True)),
                ('subgen_pct', models.CharField(blank=True, max_length=500, null=True)),
                ('sec_pct', models.CharField(blank=True, max_length=500, null=True)),
                ('subsec_pct', models.CharField(blank=True, max_length=500, null=True)),
                ('ser_pct', models.CharField(blank=True, max_length=500, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpeciesDetail',
            fields=[
                ('pid', models.OneToOneField(db_column='pid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='orchiddb.Species')),
                ('url', models.CharField(blank=True, max_length=200)),
                ('url_name', models.CharField(blank=True, max_length=100)),
                ('common_name', models.CharField(blank=True, max_length=100)),
                ('local_name', models.CharField(blank=True, max_length=100)),
                ('avg_size', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(blank=True, max_length=50)),
                ('stem', models.CharField(blank=True, max_length=500)),
                ('leaf', models.CharField(blank=True, max_length=500)),
                ('inflorescence', models.CharField(blank=True, max_length=500)),
                ('flower', models.CharField(blank=True, max_length=500)),
                ('sepal', models.CharField(blank=True, max_length=500)),
                ('mentum', models.CharField(blank=True, max_length=500)),
                ('petal', models.CharField(blank=True, max_length=500)),
                ('lip', models.CharField(blank=True, max_length=500)),
                ('fragrance', models.CharField(blank=True, max_length=500)),
                ('habitat', models.CharField(blank=True, max_length=500)),
                ('altitude', models.CharField(blank=True, max_length=500)),
                ('bloom_period', models.CharField(blank=True, max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UploadFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_to', models.CharField(blank=True, max_length=100, null=True)),
                ('source_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('source_file_name', models.CharField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('awards', models.CharField(blank=True, max_length=200, null=True)),
                ('variation', models.CharField(blank=True, max_length=50, null=True)),
                ('forma', models.CharField(blank=True, max_length=50, null=True)),
                ('originator', models.CharField(blank=True, max_length=50, null=True)),
                ('text_data', models.TextField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('certainty', models.CharField(blank=True, max_length=20, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('rank', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9')], default=0)),
                ('image_file_path', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image_file', models.CharField(blank=True, max_length=100, null=True)),
                ('is_private', models.BooleanField(default=False, null=True)),
                ('compressed', models.BooleanField(default=False, null=True)),
                ('block_id', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(blank=True, db_column='author', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.Photographer')),
                ('pid', models.ForeignKey(blank=True, db_column='pid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Species')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Tribe',
            fields=[
                ('tribe', models.CharField(db_column='tribe', default='', max_length=50, primary_key=True, serialize=False)),
                ('author', models.CharField(blank=True, max_length=200)),
                ('year', models.IntegerField(null=True)),
                ('status', models.CharField(max_length=50, null=True)),
                ('description', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('subfamily', models.ForeignKey(db_column='subfamily', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subfamily')),
            ],
            options={
                'ordering': ['tribe'],
            },
        ),
        migrations.CreateModel(
            name='TestUploadFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('image_file_path', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaxUpdate',
            fields=[
                ('id', models.AutoField(default=10, primary_key=True, serialize=False)),
                ('source', models.CharField(blank=True, max_length=10)),
                ('previous_name', models.CharField(blank=True, max_length=500)),
                ('previous_status', models.CharField(blank=True, max_length=500)),
                ('previous_dist', models.CharField(blank=True, max_length=500)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('pid', models.ForeignKey(blank=True, db_column='pid', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='update_pid', to='orchiddb.Species')),
            ],
        ),
        migrations.CreateModel(
            name='Subtribe',
            fields=[
                ('subtribe', models.CharField(db_column='subtribe', default='', max_length=50, primary_key=True, serialize=False)),
                ('author', models.CharField(blank=True, max_length=200)),
                ('year', models.IntegerField(null=True)),
                ('status', models.CharField(max_length=50, null=True)),
                ('description', models.TextField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('subfamily', models.ForeignKey(db_column='subfamily', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subfamily')),
                ('tribe', models.ForeignKey(db_column='tribe', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Tribe')),
            ],
            options={
                'ordering': ['subtribe'],
            },
        ),
        migrations.CreateModel(
            name='Subsection',
            fields=[
                ('pid', models.IntegerField(null=True)),
                ('subsec', models.IntegerField(db_column='subsec', default=None)),
                ('subsection', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('author', models.CharField(max_length=200, null=True)),
                ('citation', models.CharField(max_length=200, null=True)),
                ('year', models.IntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('sec', models.IntegerField(db_column='sec', default=None, null=True, verbose_name=orchiddb.models.Section)),
                ('distribution', models.TextField(null=True)),
                ('genus', models.CharField(max_length=50)),
                ('source', models.CharField(max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('gen', models.ForeignKey(db_column='gen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
                ('section', models.ForeignKey(db_column='section', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Section')),
                ('subgenus', models.ForeignKey(db_column='subgenus', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subgenus')),
            ],
            options={
                'ordering': ['subsection'],
            },
        ),
        migrations.CreateModel(
            name='SubRegion',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('note', models.CharField(blank=True, max_length=500, null=True)),
                ('source', models.CharField(blank=True, max_length=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('continent', models.ForeignKey(blank=True, db_column='continent', default=0, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Continent')),
                ('region', models.ForeignKey(blank=True, db_column='region', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Region')),
            ],
        ),
        migrations.CreateModel(
            name='Specieshistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genus', models.CharField(max_length=50, null=True)),
                ('species', models.CharField(max_length=100, null=True)),
                ('infraspr', models.CharField(max_length=20, null=True)),
                ('infraspe', models.CharField(max_length=50, null=True)),
                ('source', models.CharField(max_length=10)),
                ('type', models.CharField(max_length=10)),
                ('status', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('pid', models.ForeignKey(db_column='pid', on_delete=django.db.models.deletion.CASCADE, to='orchiddb.Species')),
            ],
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('pid', models.IntegerField(null=True)),
                ('ser', models.IntegerField(db_column='ser', default='')),
                ('series', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('author', models.CharField(max_length=200, null=True)),
                ('citation', models.CharField(max_length=200, null=True)),
                ('year', models.IntegerField(null=True)),
                ('description', models.TextField(null=True)),
                ('distribution', models.TextField(null=True)),
                ('genus', models.CharField(max_length=50, null=True)),
                ('source', models.CharField(max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('gen', models.ForeignKey(db_column='gen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
                ('section', models.ForeignKey(db_column='section', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Section')),
                ('subgenus', models.ForeignKey(db_column='subgenus', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subgenus')),
                ('subsection', models.ForeignKey(db_column='subsection', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subsection')),
            ],
            options={
                'ordering': ['series'],
            },
        ),
        migrations.AddField(
            model_name='section',
            name='subgenus',
            field=models.ForeignKey(db_column='subgenus', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subgenus'),
        ),
        migrations.CreateModel(
            name='ReidentifyHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_id', models.IntegerField(blank=True, null=True)),
                ('to_id', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('from_pid', models.ForeignKey(db_column='from_pid', on_delete=django.db.models.deletion.CASCADE, related_name='from_pid', to='orchiddb.Species')),
                ('to_pid', models.ForeignKey(db_column='to_pid', on_delete=django.db.models.deletion.CASCADE, related_name='to_pid', to='orchiddb.Species')),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LocalRegion',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('continent_name', models.CharField(max_length=100, null=True)),
                ('region_name', models.CharField(max_length=100, null=True)),
                ('name', models.CharField(max_length=100, null=True, unique=True)),
                ('code', models.CharField(blank=True, max_length=100, null=True)),
                ('note', models.CharField(blank=True, max_length=500, null=True)),
                ('source', models.CharField(blank=True, max_length=10, null=True)),
                ('subregion', models.CharField(blank=True, max_length=10, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('continent', models.ForeignKey(blank=True, db_column='continent', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Continent')),
                ('region', models.ForeignKey(blank=True, db_column='region', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Region')),
                ('subregion_code', models.ForeignKey(blank=True, db_column='subregion_code', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.SubRegion')),
            ],
        ),
        migrations.CreateModel(
            name='Infragenrelation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genus', models.CharField(max_length=50, null=True)),
                ('infragen', models.CharField(max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('gen', models.ForeignKey(db_column='gen', on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
                ('parent', models.ForeignKey(db_column='parent_pid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Infragen')),
            ],
        ),
        migrations.CreateModel(
            name='GeoLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('mptt_level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to='orchiddb.GeoLocation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GenusTree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genus', models.CharField(max_length=50, unique=True)),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='children', to='orchiddb.GenusTree')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Genussyn',
            fields=[
                ('pid', models.IntegerField(primary_key=True, serialize=False)),
                ('is_hybrid', models.CharField(max_length=1, null=True)),
                ('genus', models.CharField(default='', max_length=50)),
                ('author', models.CharField(default='', max_length=200)),
                ('citation', models.CharField(default='', max_length=200)),
                ('type', models.CharField(default='', max_length=20)),
                ('distribution', models.TextField(null=True)),
                ('text_data', models.TextField(null=True)),
                ('source', models.CharField(default='', max_length=50)),
                ('abrev', models.CharField(default='', max_length=50)),
                ('year', models.IntegerField(null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('acc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='gen_syn', to='orchiddb.Genus', verbose_name='genus')),
            ],
        ),
        migrations.AddField(
            model_name='genus',
            name='subfamily',
            field=models.ForeignKey(db_column='subfamily', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subfamily'),
        ),
        migrations.AddField(
            model_name='genus',
            name='subtribe',
            field=models.ForeignKey(db_column='subtribe', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subtribe'),
        ),
        migrations.AddField(
            model_name='genus',
            name='tribe',
            field=models.ForeignKey(db_column='tribe', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Tribe'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=100)),
                ('reason', models.CharField(max_length=20)),
                ('memo', models.TextField(blank=True, max_length=500)),
                ('id_list', models.CharField(blank=True, max_length=200)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('pid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comm_pid', to='orchiddb.Species')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Synonym',
            fields=[
                ('spid', models.OneToOneField(db_column='spid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='spid', serialize=False, to='orchiddb.Species')),
                ('year', models.IntegerField(blank=True, null=True)),
                ('genus', models.CharField(blank=True, max_length=50, null=True)),
                ('is_hybrid', models.CharField(blank=True, max_length=5, null=True)),
                ('species', models.CharField(blank=True, max_length=50, null=True)),
                ('infraspr', models.CharField(blank=True, max_length=20, null=True)),
                ('infraspe', models.CharField(blank=True, max_length=50, null=True)),
                ('syear', models.IntegerField(blank=True, null=True)),
                ('sgenus', models.CharField(blank=True, max_length=50, null=True)),
                ('sis_hybrid', models.CharField(blank=True, max_length=5, null=True)),
                ('sspecies', models.CharField(blank=True, max_length=50, null=True)),
                ('sinfraspr', models.CharField(blank=True, max_length=20, null=True)),
                ('sinfraspe', models.CharField(blank=True, max_length=50, null=True)),
                ('type', models.CharField(blank=True, max_length=10, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('acc', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='accid', to='orchiddb.Species', verbose_name='accepted genus')),
                ('gen', models.ForeignKey(blank=True, db_column='gen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='gen', to='orchiddb.Genus')),
                ('sgen', models.ForeignKey(blank=True, db_column='sgen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='sgen', to='orchiddb.Genus')),
            ],
        ),
        migrations.CreateModel(
            name='SpcImgHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_id', models.IntegerField(blank=True, null=True)),
                ('action', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pid', models.ForeignKey(db_column='pid', on_delete=django.db.models.deletion.CASCADE, to='orchiddb.Accepted')),
            ],
        ),
        migrations.CreateModel(
            name='SpcImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('credit_to', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(default='TBD', max_length=10)),
                ('quality', models.IntegerField(choices=[(1, 'Top'), (2, 'High'), (3, 'Average'), (4, 'Low')], default=3)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('source_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('image_url', models.CharField(blank=True, max_length=500, null=True)),
                ('text_data', models.TextField(blank=True, null=True)),
                ('certainty', models.CharField(blank=True, max_length=20, null=True)),
                ('rank', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9')], default=5)),
                ('zoom', models.IntegerField(default=0)),
                ('form', models.CharField(blank=True, max_length=50, null=True)),
                ('source_file_name', models.CharField(blank=True, max_length=100, null=True)),
                ('spid', models.IntegerField(blank=True, null=True)),
                ('awards', models.CharField(blank=True, max_length=200, null=True)),
                ('description', models.CharField(blank=True, max_length=100, null=True)),
                ('variation', models.CharField(blank=True, max_length=50, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('type', models.CharField(blank=True, max_length=20, null=True)),
                ('image_file', models.CharField(blank=True, max_length=100, null=True)),
                ('image_file_path', models.ImageField(blank=True, null=True, upload_to='utils/images/photos')),
                ('download_date', models.DateField(blank=True, null=True)),
                ('is_private', models.BooleanField(default=False, null=True)),
                ('block_id', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(db_column='author', on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.Photographer')),
                ('gen', models.ForeignKey(blank=True, db_column='gen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('pid', models.ForeignKey(db_column='pid', on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Accepted')),
            ],
        ),
        migrations.CreateModel(
            name='Similarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('differences', models.TextField(blank=True)),
                ('similar', models.TextField(blank=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('pid1', models.ForeignKey(db_column='pid1', on_delete=django.db.models.deletion.DO_NOTHING, related_name='pid1', to='orchiddb.Species')),
                ('pid2', models.ForeignKey(db_column='pid2', on_delete=django.db.models.deletion.DO_NOTHING, related_name='pid2', to='orchiddb.Species')),
            ],
            options={
                'unique_together': {('pid1', 'pid2')},
            },
        ),
        migrations.CreateModel(
            name='Intragen',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subgen', models.IntegerField(blank=True, db_column='subgen', null=True)),
                ('sec', models.IntegerField(blank=True, db_column='sec', null=True)),
                ('subsec', models.IntegerField(blank=True, db_column='subsec', null=True)),
                ('ser', models.IntegerField(blank=True, db_column='ser', null=True)),
                ('type_status', models.CharField(blank=True, max_length=20)),
                ('genus', models.CharField(blank=True, max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('gen', models.ForeignKey(db_column='gen', on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
                ('section', models.ForeignKey(db_column='section', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Section')),
                ('series', models.ForeignKey(db_column='series', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Series')),
                ('subfamily', models.ForeignKey(db_column='subfamily', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subfamily')),
                ('subgenus', models.ForeignKey(db_column='subgenus', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subgenus')),
                ('subsection', models.ForeignKey(db_column='subsection', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subsection')),
                ('subtribe', models.ForeignKey(db_column='subtribe', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subtribe')),
                ('tribe', models.ForeignKey(db_column='tribe', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Tribe')),
            ],
            options={
                'unique_together': {('gen', 'subgen', 'sec', 'subsec', 'ser')},
            },
        ),
        migrations.CreateModel(
            name='Infragenspc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author', models.CharField(max_length=200)),
                ('citation', models.CharField(max_length=200)),
                ('source', models.CharField(max_length=10)),
                ('genus', models.CharField(default=None, max_length=50, null=True)),
                ('species', models.CharField(default=None, max_length=50, null=True)),
                ('infraspr', models.CharField(default=None, max_length=20, null=True)),
                ('infraspe', models.CharField(default=None, max_length=50, null=True)),
                ('certainty', models.BooleanField(default=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('gen', models.ForeignKey(db_column='gen', on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
                ('pid', models.ForeignKey(db_column='pid', on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Species')),
                ('section', models.ForeignKey(db_column='section', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Section')),
                ('series', models.ForeignKey(db_column='series', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Series')),
                ('subgenus', models.ForeignKey(db_column='subgenus', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subgenus')),
                ('subsection', models.ForeignKey(db_column='subsection', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subsection')),
            ],
            options={
                'unique_together': {('pid', 'subgenus', 'section', 'subsection', 'series')},
            },
        ),
        migrations.CreateModel(
            name='Hybrid',
            fields=[
                ('pid', models.OneToOneField(db_column='pid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='orchiddb.Species')),
                ('source', models.CharField(blank=True, max_length=10, null=True)),
                ('genus', models.CharField(blank=True, max_length=50, null=True)),
                ('species', models.CharField(blank=True, max_length=50, null=True)),
                ('infraspr', models.CharField(blank=True, max_length=20, null=True)),
                ('is_hybrid', models.CharField(blank=True, max_length=5, null=True)),
                ('infraspe', models.CharField(blank=True, max_length=50, null=True)),
                ('author', models.CharField(blank=True, max_length=200, null=True)),
                ('seed_genus', models.CharField(blank=True, max_length=50, null=True)),
                ('seed_species', models.CharField(blank=True, max_length=50, null=True)),
                ('seed_type', models.CharField(blank=True, max_length=10, null=True)),
                ('pollen_genus', models.CharField(blank=True, max_length=50, null=True)),
                ('pollen_species', models.CharField(blank=True, max_length=50, null=True)),
                ('pollen_type', models.CharField(blank=True, max_length=10, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=20, null=True)),
                ('originator', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('history', models.TextField(blank=True, null=True)),
                ('culture', models.TextField(blank=True, null=True)),
                ('etymology', models.TextField(blank=True, null=True)),
                ('num_image', models.IntegerField(blank=True, null=True)),
                ('num_ancestor', models.IntegerField(blank=True, null=True)),
                ('num_species_ancestor', models.IntegerField(blank=True, null=True)),
                ('num_descendant', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('gen', models.ForeignKey(db_column='gen', default=0, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
                ('pollen_gen', models.ForeignKey(db_column='pollgen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pollgen', to='orchiddb.Genus')),
                ('pollen_id', models.ForeignKey(blank=True, db_column='pollen_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='pollen_id', to='orchiddb.Species')),
                ('seed_gen', models.ForeignKey(db_column='seedgen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='seedgen', to='orchiddb.Genus')),
                ('seed_id', models.ForeignKey(blank=True, db_column='seed_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='seed_id', to='orchiddb.Species')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HybImgHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('img_id', models.IntegerField(blank=True, null=True)),
                ('action', models.CharField(blank=True, max_length=50, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('user_id', models.ForeignKey(db_column='user_id', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('pid', models.ForeignKey(db_column='pid', on_delete=django.db.models.deletion.CASCADE, to='orchiddb.Hybrid')),
            ],
        ),
        migrations.CreateModel(
            name='HybImages',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form', models.CharField(blank=True, max_length=50, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('rank', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5'), (6, '6'), (7, '7'), (8, '8'), (9, '9')], default=5)),
                ('zoom', models.IntegerField(default=0)),
                ('certainty', models.CharField(blank=True, max_length=20, null=True)),
                ('source_file_name', models.CharField(blank=True, max_length=100, null=True)),
                ('awards', models.CharField(blank=True, max_length=200, null=True)),
                ('detail', models.CharField(blank=True, max_length=20, null=True)),
                ('cultivator', models.CharField(blank=True, max_length=50, null=True)),
                ('hybridizer', models.CharField(blank=True, max_length=50, null=True)),
                ('credit_to', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(default='TBD', max_length=10)),
                ('quality', models.IntegerField(choices=[(1, 'Top'), (2, 'High'), (3, 'Average'), (4, 'Low')], default=3)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('source_url', models.CharField(blank=True, max_length=1000, null=True)),
                ('image_url', models.CharField(blank=True, max_length=500, null=True)),
                ('text_data', models.TextField(blank=True, null=True)),
                ('description', models.CharField(blank=True, max_length=400, null=True)),
                ('variation', models.CharField(blank=True, max_length=50, null=True)),
                ('image_file', models.CharField(blank=True, max_length=100, null=True)),
                ('image_file_path', models.ImageField(blank=True, null=True, upload_to='utils/images/photos')),
                ('download_date', models.DateField(blank=True, null=True)),
                ('spid', models.IntegerField(blank=True, null=True)),
                ('is_private', models.BooleanField(default=False, null=True)),
                ('block_id', models.IntegerField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(db_column='author', on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.Photographer')),
                ('gen', models.ForeignKey(blank=True, db_column='gen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus')),
                ('user_id', models.ForeignKey(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('pid', models.ForeignKey(blank=True, db_column='pid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Hybrid', verbose_name='grex')),
            ],
        ),
        migrations.CreateModel(
            name='Genusacc',
            fields=[
                ('pid', models.OneToOneField(db_column='pid', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='orchiddb.Genus')),
                ('is_hybrid', models.CharField(max_length=1, null=True)),
                ('genus', models.CharField(default='', max_length=50)),
                ('author', models.CharField(default='', max_length=200)),
                ('citation', models.CharField(default='', max_length=200)),
                ('alliance', models.CharField(default='', max_length=50)),
                ('status', models.CharField(default='', max_length=20)),
                ('type', models.CharField(default='', max_length=20)),
                ('description', models.TextField(null=True)),
                ('distribution', models.TextField(null=True)),
                ('text_data', models.TextField(null=True)),
                ('source', models.CharField(default='', max_length=50)),
                ('abrev', models.CharField(default='', max_length=50)),
                ('year', models.IntegerField(null=True)),
                ('num_species', models.IntegerField(null=True)),
                ('num_hybrid', models.IntegerField(null=True)),
                ('num_synonym', models.IntegerField(null=True)),
                ('num_spcimage', models.IntegerField(blank=True, null=True)),
                ('num_spc_with_image', models.IntegerField(blank=True, null=True)),
                ('pct_spc_with_image', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('num_hybimage', models.IntegerField(blank=True, null=True)),
                ('num_hyb_with_image', models.IntegerField(blank=True, null=True)),
                ('pct_hyb_with_image', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('notepad', models.CharField(default='', max_length=500)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('family', models.ForeignKey(db_column='family', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Family')),
                ('subfamily', models.ForeignKey(db_column='subfamily', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subfamily')),
                ('subtribe', models.ForeignKey(db_column='subtribe', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subtribe')),
                ('tribe', models.ForeignKey(db_column='tribe', default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Tribe')),
            ],
            options={
                'ordering': ('genus',),
            },
        ),
        migrations.CreateModel(
            name='Gensyn',
            fields=[
                ('pid', models.OneToOneField(db_column='pid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='orchiddb.Genus')),
                ('accepted', models.CharField(default='', max_length=50)),
                ('acc_author', models.CharField(default='', max_length=50)),
                ('acc_year', models.IntegerField(null=True)),
                ('status', models.CharField(default='', max_length=20)),
                ('type', models.CharField(default='', max_length=20)),
                ('description', models.CharField(default='', max_length=255)),
                ('source', models.CharField(default='', max_length=50)),
                ('abrev', models.CharField(default='', max_length=50)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('acc', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='gen_id', to='orchiddb.Genus', verbose_name='genus')),
            ],
        ),
        migrations.CreateModel(
            name='Distribution',
            fields=[
                ('id', models.AutoField(default=10, primary_key=True, serialize=False)),
                ('source', models.CharField(blank=True, max_length=10)),
                ('dist_code', models.CharField(blank=True, max_length=10)),
                ('localregion_code', models.CharField(blank=True, max_length=10)),
                ('orig_code', models.CharField(blank=True, max_length=100)),
                ('dist_status', models.CharField(blank=True, max_length=10)),
                ('confidence', models.CharField(blank=True, max_length=10)),
                ('comment', models.CharField(blank=True, max_length=500)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('continent_id', models.ForeignKey(blank=True, db_column='continent_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Continent')),
                ('gen', models.ForeignKey(blank=True, db_column='gen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='dist_gen', to='orchiddb.Genus')),
                ('localregion_id', models.ForeignKey(blank=True, db_column='localregion_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.LocalRegion')),
                ('pid', models.ForeignKey(blank=True, db_column='pid', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dist_pid', to='orchiddb.Species')),
                ('region_id', models.ForeignKey(blank=True, db_column='region_id', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Region')),
                ('subregion_code', models.ForeignKey(blank=True, db_column='subregion_code', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.SubRegion')),
            ],
            options={
                'unique_together': {('pid', 'region_id', 'subregion_code', 'localregion_id')},
            },
        ),
        migrations.CreateModel(
            name='Alliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alliance', models.CharField(max_length=50)),
                ('type', models.CharField(max_length=10)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('modified_date', models.DateTimeField(auto_now=True)),
                ('alid', models.ForeignKey(blank=True, db_column='alid', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='alid', to='orchiddb.Genus')),
                ('gen', models.ForeignKey(blank=True, db_column='gen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='algen', to='orchiddb.Genus')),
            ],
            options={
                'ordering': ['alliance'],
                'unique_together': {('alid', 'gen')},
            },
        ),
        migrations.AddField(
            model_name='accepted',
            name='gen',
            field=models.ForeignKey(blank=True, db_column='gen', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Genus'),
        ),
        migrations.AddField(
            model_name='accepted',
            name='operator',
            field=models.ForeignKey(db_column='operator', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='accepted',
            name='section',
            field=models.ForeignKey(db_column='section', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Section'),
        ),
        migrations.AddField(
            model_name='accepted',
            name='series',
            field=models.ForeignKey(db_column='series', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Series'),
        ),
        migrations.AddField(
            model_name='accepted',
            name='subgenus',
            field=models.ForeignKey(db_column='subgenus', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subgenus'),
        ),
        migrations.AddField(
            model_name='accepted',
            name='subsection',
            field=models.ForeignKey(db_column='subsection', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Subsection'),
        ),
        migrations.CreateModel(
            name='AncestorDescendant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('anctype', models.CharField(default='hybrid', max_length=10)),
                ('pct', models.FloatField(blank=True, null=True)),
                ('aid', models.ForeignKey(db_column='aid', on_delete=django.db.models.deletion.DO_NOTHING, to='orchiddb.Species')),
                ('did', models.ForeignKey(db_column='did', on_delete=django.db.models.deletion.CASCADE, to='orchiddb.Hybrid')),
            ],
            options={
                'unique_together': {('did', 'aid')},
            },
        ),
    ]
