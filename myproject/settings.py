"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""
# import environ
import os

# root = environ.Path(__file__) - 2  # get root of the project
# ROOT_DIR = environ.Path(__file__) - 2  # get root of the project
# env = environ.Env()
# environ.Env.read_env()  # reading .env file
# DOT_ENV_FILE = env.str("DOT_ENV_FILE", default=".env")
# if DOT_ENV_FILE:
#     env.read_env(str(ROOT_DIR.path(DOT_ENV_FILE)))
# SITE_ROOT = root()
# SITE_ROOT = ROOT_DIR

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '7nec)c($%l-df9q6036uu7e)f0sq=hhdxrbmuo5sba8+i_aw@3'
SITE_ID = 3

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    # 'orchidroots.org',
    # 'www.orchidroots.org',
    '134.209.93.40',
    '127.0.0.1',
    'localhost',
    # 'orchids-roots.beta.com'
]


# Application definition

INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',   # For django login
    'django.contrib.humanize',
    # 'rest_framework',

    #local
    'accounts',
    'utils',
    'orchiddb',
    # 'myproject',

    # 'search',
    # 'orchidlist',
    # 'detail',
    # 'documents',
    # 'donation',
    # 'catalog',
    # 'distribution',

    # Experiment
    # 'django_mailbox',
    # 'sendmail',
    # 'genera',
    # 'orchid',
    # 'orchidlite',
    # 'natural',

    # Third Party
    # 'allauth',
    # 'allauth.account',
    # 'allauth.socialaccount',
    # 'allauth.socialaccount.providers.facebook',
    'bootstrap_modal_forms',
    'crispy_forms',
    'jquery',
]

CRISPY_TEMPLATE_PACK = 'bootstrap4'
CRISPY_FAIL_SILENTLY = not DEBUG
AUTH_USER_MODEL = 'accounts.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

INTERNAL_IPS = [
    # ...
    '134.209.93.40',
    # ...
]

ROOT_URLCONF = 'myproject.urls'

AUTHENTICATION_BACKENDS = (
    # Needed to login by username in Django admin, regardless of `allauth`
    "django.contrib.auth.backends.ModelBackend",
    # `allauth` specific authentication methods, such as login by e-mail
    "allauth.account.auth_backends.AuthenticationBackend"
)

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'accounts/templates')],
        'OPTIONS': {
            "loaders": [
                "django.template.loaders.filesystem.Loader",
                "django.template.loaders.app_directories.Loader",
            ],
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'stage2',
        'HOST': '167.172.24.44',
        'USER': 'dbuser',
        'PASSWORD':'Imh#r3r3',
        # 'HOST': env.str('DBHOST', default=''),
        # 'USER': env.str('DBUSER', default=''),
        # 'PASSWORD': env.str('PASSWD', default='')
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'
LOGIN_URL = '/login/'

STATICFILES_DIRS = (os.path.join(BASE_DIR, "static"),)
STATIC_ROOT = '/webapps/static/'
MEDIA_ROOT  = '/webapps/static/media/'
FILE_UPLOAD_PERMISSIONS = 0o644

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES' : ('rest_framework.permissions.IsAuthenticated',),
    # 'DEFAULT_AUTHENTICATION_CLASSES' : ('rest_framework_simplejwt.authentication.JWTAuthentication',)
}

CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        }
    }
}


# allauth account settings
# ACCOUNT_EMAIL_VERIFICATION = "mandatory"
# ACCOUNT_CONFIRM_EMAIL_ON_GET = True
# ACCOUNT_EMAIL_REQUIRED = True
# ACCOUNT_UNIQUE_EMAIL = True

#https://django-allauth.readthedocs.io/en/latest/providers.html
# SOCIALACCOUNT_PROVIDERS = {
#     'facebook': {
#         'METHOD': 'oauth2',
#         'SDK_URL': '//connect.facebook.net/{locale}/sdk.js',
#         'SCOPE': ['email', 'public_profile'],
#         # 'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
#         'INIT_PARAMS': {'cookie': True},
#         'FIELDS': [
#             'id',
#             'email',
#             'name',
#             'first_name',
#             'last_name',
#             'link',
#             'picture'
#         ],
#         'EXCHANGE_TOKEN': True,
#         'VERIFIED_EMAIL': True,
#         'VERSION': 'v7.0',
#     }
# }
LOGIN_REDIRECT_URL = "/home"
# SOCIAL_AUTH_FACEBOOK_KEY = '282814149715322'
# SOCIAL_AUTH_FACEBOOK_SECRET = 'bfeb686c452760e27028310db79766f3'
# ACCOUNT_DEFAULT_HTTP_PROTOCOL = 'https'
# ACCOUNT_ADAPTER = 'accounts.adapters.AccountAdapter'
# SOCIALACCOUNT_ADAPTER = 'accounts.adapters.SocialAccountAdapter'


# mail settings
# EMAIL_BACKEND = "anymail.backends.mailgun.EmailBackend"
# ANYMAIL = {
#     "MAILGUN_API_KEY": 'key-51a1bf6e0343f3788a6f370a0279d7b7',
#     "MAILGUN_SENDER_DOMAIN": '134.209.93.40',
#     "MAILGUN_API_URL": "https://api.mailgun.net/v3",
    # "MAILGUN_API_URL": env.str("MAILGUN_API_URL", default="https://api.mailgun.net/v3"),
# }
# DEFAULT_FROM_EMAIL = "admin@mail.orchidroots.org"  # if you don't already have this in settings
# SERVER_EMAIL = "admin@mail.orchidroots.org"

# EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"


# STRIPE_SECRET_KEY = env.str('STRIPE_SECRET_KEY', default='')
# STRIPE_PUBLISHABLE_KEY = env.str('STRIPE_PUBLISHABLE_KEY', default='')

# paypal settings
# PAYPAL_CLIENT_ID = env('PAYPAL_CLIENT_ID', default='')
# PAYPAL_SECRET =  env('PAYPAL_SECRET', default='')

# try:
#     from .local_settings import * # NOQA
# except: # NOQA
#     pass
