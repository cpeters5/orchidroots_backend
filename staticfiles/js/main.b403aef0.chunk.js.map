{"version":3,"sources":["components/App/App.js","constants.js","api/Axios.js","api/api.js","Actions/authActions.js","actionTypes/authActionTypes.js","components/MyFaceBookLogin/MyFaceBookLogin.js","components/MyFaceBookLogin/index.js","components/Login/Login.js","components/Login/index.js","components/ForgetPassword/ForgetPassword.js","components/ForgetPassword/index.js","components/Signup/Signup.js","components/Signup/index.js","components/Verification/Verification.js","components/Verification/index.js","components/ResetPassword/ResetPassword.js","components/ResetPassword/index.js","Router.js","components/Header/Header.js","serviceWorker.js","reducers/authReducer.js","reducers/index.js","store.js","index.js"],"names":["App","className","role","aria-label","Component","connect","isLoggedIn","localStorage","getItem","errorsToList","__errorsToList","errors","error_list","key","errs","error","push","detail","Array","isArray","AxiosInstance","Axios","create","baseURL","BASEURL","headers","Accept","interceptors","request","use","config","Authorization","response","data","login","loginData","post","logout","signUp","signUpData","verifyCode","verificationData","resendVerifyCode","resendVerificationData","getCountries","get","getPhotographers","forgetPasswordSendCode","forgetPasswordSendCodeData","forgetPasswordVerifyCode","forgetPasswordVerifyCodeData","resetPassword","resetPasswordData","socialFaceBookLogin","socialFaceBookLoginData","loginSuccess","type","loginFailure","getCountriesSuccess","countries","getPhotographersSuccess","photographers","logoutDone","signupSuccess","email","signupFailure","verificationSuccess","verificationFailure","forgetPasswordSendCodeInit","payload","history","dispatch","a","api","then","forgetPasswordSendCodeSuccess","username","catch","err","socialLoginFaceBookInit","value","setItem","token","MyFaceBookLogin","props","responseFacebook","social_type","social_token","accessToken","social_id","id","state","appId","autoLoad","callback","this","mapDispatchToProps","withRouter","Login","changeUsername","event","setState","target","changePassword","password","onLoginFail","isLoading","onLoginSuccess","submit","preventDefault","loginInit","onSubmit","name","onChange","placeholder","disabled","required","htmlFor","aria-hidden","to","authReducer","loginErrors","ForgetPassword","forgetpasswordErrors","Signup","onSignupFail","onSignupSuccess","onChangeControlText","onChangeProfileControlText","persist","prevState","profile","signupInit","confirm_password","fullname","photo_credit_name","specialty","current_credit_name_id","country","length","aria-describedby","selected","map","photographer","author_id","displayname","pk","signupErrors","Verification","onCompleteCodeInput","code","verificationInit","onVerificationFail","onVerificationSuccess","onClickResendCode","resendVerificationInit","onResendVerificationFail","onResendVerificationSuccess","alert","onComplete","fields","myroute","onClick","res","signUpEmail","ResetPassword","forgetPasswordVerifyCodeFail","forgetPasswordVerifyCodeSuccess","show_new_password","onResendResetPasswordFail","onResendResetPasswordSuccess","new_password","onForgetPasswordVerifyCodeFail","onForgetPasswordVerifyCodeSuccess","resetPasswordUsername","exact","path","UserGreeting","href","data-toggle","style","color","GuestGreeting","marginTop","removeItem","data-target","aria-controls","aria-expanded","lineHeight","fontSize","fontFamily","Boolean","window","location","hostname","match","initialState","signUpErrors","action","produce","draft","createRootReducer","combineReducers","router","connectRouter","createBrowserHistory","middlewares","routerMiddleware","thunk","persistConfig","storage","whitelist","persistedReducer","persistReducer","composedEnhancers","compose","applyMiddleware","store","createStore","__PRELOADED_STATE__","persistor","persistStore","ReactDOM","render","Router","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.b403aef0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\n\nclass App extends Component {\n  componentDidMount() {}\n  render() {\n    return (\n      <div className=\"container h-100\">\n        <div className=\"row h-100 justify-content-center align-items-center\">\n          <form className=\"col-12\">\n            <div className=\"form-group\">\n              <br/>\n              <br/>\n              <br/>\n              <h1>OrchidRoots</h1>\n              <br/>\n              <h4>We are coming soon with a speedy version be tuned <span role=\"img\" aria-label=\"\">😉</span></h4>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect()(App);\n","export const BASEURL = \"https://orchidroots.excelcodes.com\";\n\nexport const isLoggedIn = () => {\n  return localStorage.getItem(\"auth-token\") !== null;\n};\nexport const logout = () => {\n  localStorage.removeItem(\"auth-token\");\n};\n\nexport const errorsToList = function __errorsToList(errors) {\n  let error_list = [];\n  for (const key in errors) {\n    const errs = errors[key];\n    if (typeof errs === \"string\")\n      errors.error\n        ? error_list.push(errors.error)\n        : error_list.push(errors.detail);\n    else if (Array.isArray(errs)) error_list.push(...errs);\n    else {\n      error_list.push(__errorsToList(errs));\n    }\n    return error_list;\n  }\n};\n","import Axios from \"axios\";\nimport \"dotenv/config\";\nimport { BASEURL, isLoggedIn } from \"../constants\";\n\nconst AxiosInstance = Axios.create({\n  baseURL: BASEURL + \"/api/\",\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Accept: \"application/json\",\n    \"Accept-Language\": \"en\",\n  },\n});\n\nAxiosInstance.interceptors.request.use((config) => {\n  if (isLoggedIn())\n    config.headers.Authorization = localStorage.getItem(\"auth-token\") || \"\";\n  return config;\n});\n\nAxiosInstance.interceptors.response.use((response) => response.data);\n\nexport default AxiosInstance;\n","import Axios from \"./Axios\";\n\nexport default {\n  auth: {\n    login: (loginData) => Axios.post(\"v1/accounts/login/\", loginData),\n    logout: () => Axios.post(\"v1/accounts/logout/\"),\n    signUp: (signUpData) => Axios.post(\"v1/accounts/signup/\", signUpData),\n    verifyCode: (verificationData) =>\n      Axios.post(\"v1/accounts/verify-code/\", verificationData),\n    resendVerifyCode: (resendVerificationData) =>\n      Axios.post(\"v1/accounts/resend-verify-code/\", resendVerificationData),\n    getCountries: () => Axios.get(\"v1/accounts/countries/\"),\n    getPhotographers: () => Axios.get(\"v1/accounts/photographers/\"),\n    forgetPasswordSendCode: (forgetPasswordSendCodeData) =>\n      Axios.post(\n        \"v1/accounts/forget-password-send-code/\",\n        forgetPasswordSendCodeData\n      ),\n    forgetPasswordVerifyCode: (forgetPasswordVerifyCodeData) =>\n      Axios.post(\n        \"v1/accounts/forget-password-verify-code/\",\n        forgetPasswordVerifyCodeData\n      ),\n    resetPassword: (resetPasswordData) =>\n      Axios.post(\"v1/accounts/reset-password/\", resetPasswordData),\n    socialFaceBookLogin: (socialFaceBookLoginData) =>\n      Axios.post(\"v1/accounts/social-login/\", socialFaceBookLoginData),\n  },\n};\n","import * as types from \"../actionTypes/authActionTypes\";\nimport api from \"../api/api\";\nimport { logout } from \"../constants\";\n\nexport const loginInit = (\n  payload,\n  history,\n  onLoginFail,\n  onLoginSuccess\n) => async (dispatch) => {\n  dispatch({ type: types.LOGIN_INIT });\n  api.auth\n    .login(payload)\n    .then((value) => {\n      dispatch(loginSuccess());\n      onLoginSuccess();\n      localStorage.setItem(\"auth-token\", \"Token \" + value.token);\n      history.push(\"/\");\n    })\n    .catch((err) => {\n      dispatch(loginFailure(err.response.data));\n      onLoginFail(err.response.data.error);\n      if (err.response.data.error === \"Please verify your email.\") {\n        history.push(\"/verification\");\n      }\n    });\n};\n\nexport const loginSuccess = () => ({\n  type: types.LOGIN_SUCCESS,\n});\n\nexport const loginFailure = (error) => ({\n  type: types.LOGIN_FAILURE,\n  error,\n});\n\nexport const getCountries = () => async (dispatch) => {\n  dispatch({ type: types.GET_COUNTRIES });\n  api.auth\n    .getCountries()\n    .then((value) => {\n      dispatch(getCountriesSuccess(value));\n    })\n    .catch((err) => {\n      dispatch(getCountriesSuccess([]));\n    });\n};\n\nexport const getCountriesSuccess = (data) => ({\n  type: types.GET_COUNTRIES_SUCCESS,\n  countries: data,\n});\n\nexport const getPhotographers = () => async (dispatch) => {\n  dispatch({ type: types.GET_PHOTOGRAPHERS });\n  api.auth\n    .getPhotographers()\n    .then((value) => {\n      dispatch(getPhotographersSuccess(value));\n    })\n    .catch((err) => {\n      dispatch(getPhotographersSuccess([]));\n    });\n};\n\nexport const getPhotographersSuccess = (data) => ({\n  type: types.GET_PHOTOGRAPHERS_SUCCESS,\n  photographers: data,\n});\n\nexport const logoutInit = (history) => async (dispatch) => {\n  dispatch({ type: types.LOGOUT_INIT });\n  api.auth\n    .logout()\n    .then(() => {\n      logout();\n      dispatch(logoutDone());\n      history.push(\"/\");\n    })\n    .catch((err) => {\n      dispatch(logoutDone());\n    });\n};\n\nexport const logoutDone = (error) => ({\n  type: types.LOGOUT_DONE,\n  error,\n});\nexport const signupInit = (\n  payload,\n  history,\n  onSignupFail,\n  onSignupSuccess\n) => async (dispatch) => {\n  dispatch({ type: types.SIGNUP_INIT });\n  api.auth\n    .signUp(payload)\n    .then((value) => {\n      dispatch(signupSuccess(payload.email));\n      onSignupSuccess();\n      history.push(\"/verification\");\n    })\n    .catch((err) => {\n      dispatch(signupFailure());\n      onSignupFail(err.response.data);\n    });\n};\n\nexport const signupSuccess = (email) => ({\n  type: types.SIGNUP_SUCCESS,\n  email,\n});\nexport const signupFailure = (error) => ({\n  type: types.SIGNUP_FAILURE,\n  error,\n});\n\nexport const verificationInit = (\n  payload,\n  history,\n  onVerificationFail,\n  onVerificationSuccess\n) => async (dispatch) => {\n  dispatch({ type: types.VERIFICATION_INIT });\n  api.auth\n    .verifyCode(payload)\n    .then(() => {\n      dispatch(verificationSuccess());\n      onVerificationSuccess();\n      alert(\"Your account is verified please login.\");\n      history.push(\"/login\");\n    })\n    .catch((err) => {\n      dispatch(verificationFailure());\n      onVerificationFail(err.response.data);\n    });\n};\n\nexport const verificationSuccess = () => ({\n  type: types.VERIFICATION_SUCCESS,\n});\n\nexport const verificationFailure = (error) => ({\n  type: types.VERIFICATION_FAILURE,\n  error,\n});\n\nexport const resendVerificationInit = (\n  payload,\n  onResendVerificationFail,\n  onResendVerificationSuccess\n) => async (dispatch) => {\n  dispatch({ type: types.RESEND_VERIFICATION_INIT });\n  api.auth\n    .resendVerifyCode(payload)\n    .then((res) => {\n      dispatch(verificationSuccess());\n      onResendVerificationSuccess(res);\n    })\n    .catch((err) => {\n      dispatch(verificationFailure());\n      onResendVerificationFail(err.response.data);\n    });\n};\n\nexport const forgetPasswordSendCodeInit = (payload, history) => async (\n  dispatch\n) => {\n  dispatch({ type: types.FORGET_PASSWORD_SEND_CODE_INIT });\n  api.auth\n    .forgetPasswordSendCode(payload)\n    .then(() => {\n      dispatch(forgetPasswordSendCodeSuccess(payload.username));\n      history.push(\"/resetpassword\");\n    })\n    .catch((err) => {});\n};\n\nexport const forgetPasswordSendCodeSuccess = (username) => ({\n  type: types.FORGET_PASSWORD_SEND_CODE_SUCCESS,\n  username,\n});\n\nexport const forgetPasswordVerifyCode = (\n  payload,\n  onForgetPasswordVerifyCodeFail,\n  onForgetPasswordVerifyCodeSuccess\n) => async (dispatch) => {\n  dispatch({ type: types.FORGET_PASSWORD_SEND_CODE_INIT });\n  api.auth\n    .forgetPasswordVerifyCode(payload)\n    .then(() => {\n      onForgetPasswordVerifyCodeSuccess();\n      // dispatch(forgetPasswordSendCodeSuccess(payload.username));\n    })\n    .catch((err) => {\n      onForgetPasswordVerifyCodeFail(err.response.data);\n    });\n};\nexport const resetPassword = (payload, history) => async (dispatch) => {\n  dispatch({ type: types.FORGET_PASSWORD_SEND_CODE_INIT });\n  api.auth\n    .resetPassword(payload)\n    .then(() => {\n      // dispatch(forgetPasswordSendCodeSuccess(payload.username));\n      alert(\n        \"Password reset Successfully, You can login with your new password now.\"\n      );\n      history.push(\"/login\");\n    })\n    .catch((err) => {});\n};\n\nexport const socialLoginFaceBookInit = (payload, history) => async (\n  dispatch\n) => {\n  dispatch({ type: types.SOCIAL_LOGIN_FACEBOOK_INIT });\n  api.auth\n    .socialFaceBookLogin(payload)\n    .then((value) => {\n      dispatch(loginSuccess());\n      localStorage.setItem(\"auth-token\", \"Token \" + value.token);\n      history.push(\"/\");\n    })\n    .catch((err) => {\n      dispatch(loginFailure(err.response.data));\n    });\n};\n","export const LOGIN_INIT = \"LOGIN_INIT\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\n\nexport const LOGOUT_INIT = \"LOGOUT_INIT\";\nexport const LOGOUT_DONE = \"LOGOUT_DONE\";\n\nexport const SIGNUP_INIT = \"SIGNUP_INIT\";\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\";\nexport const SIGNUP_FAILURE = \"SIGNUP_FAILURE\";\n\nexport const VERIFICATION_INIT = \"VERIFICATION_INIT\";\nexport const VERIFICATION_SUCCESS = \"VERIFICATION_SUCCESS\";\nexport const VERIFICATION_FAILURE = \"VERIFICATION_FAILURE\";\n\nexport const RESEND_VERIFICATION_INIT = \"RESEND_VERIFICATION_INIT\";\n\nexport const FORGET_PASSWORD_SEND_CODE_INIT = \"FORGET_PASSWORD_SEND_CODE_INIT\";\nexport const FORGET_PASSWORD_SEND_CODE_SUCCESS = \"FORGET_PASSWORD_SEND_CODE_SUCCESS\";\n\n\nexport const GET_COUNTRIES = \"GET_COUNTRIES\";\nexport const GET_COUNTRIES_SUCCESS = \"GET_COUNTRIES_SUCCESS\";\n\nexport const GET_PHOTOGRAPHERS = \"GET_PHOTOGRAPHERS\";\nexport const GET_PHOTOGRAPHERS_SUCCESS = \"GET_PHOTOGRAPHERS_SUCCESS\";\n\nexport const SOCIAL_LOGIN_FACEBOOK_INIT = \"SOCIAL_LOGIN_FACEBOOK_INIT\";\n","import React, { Component } from \"react\";\nimport FacebookLogin from \"react-facebook-login\";\n\nclass MyFaceBookLogin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n  responseFacebook = (response) => {\n    let payload = {\n      social_type: \"facebook\",\n      social_token: response.accessToken,\n      social_id: response.id,\n    };\n    this.props.socialLoginFaceBookInit(payload, this.props.history);\n  };\n  render() {\n    return (\n      <FacebookLogin\n        appId=\"2574533656097865\"\n        autoLoad={false}\n        callback={this.responseFacebook}\n      />\n    );\n  }\n}\nexport default MyFaceBookLogin;\n","import { connect } from \"react-redux\";\nimport { socialLoginFaceBookInit } from \"../../Actions/authActions\";\nimport MyFaceBookLogin from \"./MyFaceBookLogin\";\nimport { withRouter } from \"react-router\";\n\nconst mapDispatchToProps = {\n  socialLoginFaceBookInit,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(MyFaceBookLogin)\n);\n","import React, { Component } from \"react\";\nimport \"./login.css\";\nimport { Link } from \"react-router-dom\";\nimport MyFaceBookLogin from \"../MyFaceBookLogin\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      errors: [],\n      isLoading: false,\n    };\n  }\n  changeUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  changePassword = (event) => {\n    this.setState({ password: event.target.value });\n  };\n  onLoginFail = (errors) => {\n    this.setState({ errors: errors, isLoading: false });\n  };\n  onLoginSuccess = () => {\n    this.setState({ isLoading: false });\n  };\n  submit = (event) => {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    let { username, password } = this.state;\n    this.props.loginInit(\n      { username, password },\n      this.props.history,\n      this.onLoginFail,\n      this.onLoginSuccess\n    );\n  };\n  render() {\n    return (\n      <div className=\"loginform col-md-6\">\n        <h3>Login</h3>\n\n        <form onSubmit={this.submit}>\n          <div className=\"form-group \">\n            <label className=\"col-form-label  requiredField\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              className=\"form-control\"\n              onChange={this.changeUsername}\n              value={this.state.username}\n              placeholder=\"Enter username\"\n              disabled={this.state.isLoading}\n              required\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"exampleInputPassword1\">Password</label>\n            <input\n              name=\"password\"\n              type=\"password\"\n              onChange={this.changePassword}\n              value={this.state.password}\n              className=\"form-control\"\n              placeholder=\"Password\"\n              disabled={this.state.isLoading}\n              required\n            />\n          </div>\n          <div className=\"error text-danger my-1\">{this.state.errors}</div>\n          {this.state.isLoading ? (\n            <button className=\"btn btn-warning\" type=\"button\" disabled>\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n              Loading...\n            </button>\n          ) : (\n            <button type=\"submit\" className=\"btn btn-warning\">\n              Submit\n            </button>\n          )}\n          <div className=\"login_message row d-flex justify-content-between align-items-center\">\n            <div>\n              Don’t have an account ? <Link to=\"/signup\">Sign up</Link>\n            </div>\n            <div>\n              Can't Login? <Link to=\"/forgetpassword\">Forget Password</Link>\n            </div>\n            <MyFaceBookLogin />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default Login;\n","import { connect } from \"react-redux\";\nimport { loginInit, socialLoginFaceBookInit } from \"../../Actions/authActions\";\nimport Login from \"./Login\";\nimport { withRouter } from \"react-router\";\n\nconst mapDispatchToProps = {\n  loginInit,\n  socialLoginFaceBookInit,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    errors: state.authReducer.loginErrors,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login));\n","import React, { Component } from \"react\";\nimport \"./forgetpassword.css\";\nimport { Link } from \"react-router-dom\";\n\nclass ForgetPassword extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      errors: [],\n      isLoading: false,\n    };\n  }\n  changeUsername = (event) => {\n    this.setState({ username: event.target.value });\n  };\n  submit = (event) => {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    let { username } = this.state;\n    this.props.forgetPasswordSendCodeInit({ username }, this.props.history);\n  };\n  render() {\n    return (\n      <div className=\"forgetpasswordform col-md-6\">\n        <h3>ForgetPassword</h3>\n\n        <form onSubmit={this.submit}>\n          <div className=\"form-group \">\n            <label className=\"col-form-label  requiredField\">\n              Enter usernem or email\n            </label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              className=\"form-control\"\n              onChange={this.changeUsername}\n              value={this.state.username}\n              placeholder=\"username or email\"\n              disabled={this.state.isLoading}\n              required\n            />\n          </div>\n          <div className=\"error text-danger my-1\">{this.state.errors}</div>\n          {this.state.isLoading ? (\n            <button className=\"btn btn-warning\" type=\"button\" disabled>\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n              Loading...\n            </button>\n          ) : (\n            <button type=\"submit\" className=\"btn btn-warning\">\n              Submit\n            </button>\n          )}\n          <div className=\"forgetpassword_message row d-flex justify-content-between align-items-center\">\n            <div>\n              Have an account ? <Link to=\"/login\">Login</Link>\n            </div>\n            <div>\n              Don't have an account? <Link to=\"/signup\">Sign up</Link>\n            </div>\n            <div className=\"\">\n              <br></br>\n              <br></br>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default ForgetPassword;\n","import { connect } from \"react-redux\";\nimport { forgetPasswordSendCodeInit } from \"../../Actions/authActions\";\nimport ForgetPassword from \"./ForgetPassword\";\nimport { withRouter } from \"react-router\";\n\nconst mapDispatchToProps = {\n  forgetPasswordSendCodeInit,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    errors: state.authReducer.forgetpasswordErrors,\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(ForgetPassword)\n);\n","import React, { Component } from \"react\";\nimport \"./signup.css\";\nimport { errorsToList } from \"../../constants\";\nimport { Link } from \"react-router-dom\";\nimport MyFaceBookLogin from \"../MyFaceBookLogin\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      errors: [],\n      isLoading: false,\n      username: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      fullname: \"\",\n      email: \"\",\n      profile: {\n        photo_credit_name: \"\",\n        specialty: \"\",\n        current_credit_name_id: \"\",\n        country: \"\",\n      },\n    };\n  }\n\n  onSignupFail = (errors) => {\n    let error_list = errorsToList(errors);\n    this.setState({ errors: error_list, isLoading: false });\n  };\n  onSignupSuccess = () => {\n    this.setState({ isLoading: false });\n  };\n  componentDidMount() {\n    if (this.props.countries.length === 0) this.props.getCountries();\n    if (this.props.photographers.length === 0) this.props.getPhotographers();\n  }\n  onChangeControlText = (event) => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n  onChangeProfileControlText = (event) => {\n    event.persist();\n    this.setState((prevState) => {\n      return {\n        ...prevState,\n        profile: {\n          ...prevState.profile,\n          [event.target.name]: event.target.value,\n        },\n      };\n    });\n  };\n  submit = (event) => {\n    event.preventDefault();\n    this.props.signupInit(\n      this.state,\n      this.props.history,\n      this.onSignupFail,\n      this.onSignupSuccess\n    );\n  };\n  render() {\n    return (\n      <div className=\"signupform col-md-6\">\n        <h3>signup</h3>\n\n        <form onSubmit={this.submit}>\n          <div className=\"form-row\">\n            <div className=\"col-md-6 mb-3\">\n              <label htmlFor=\"validationCustomUsername\">Username</label>\n              <div className=\"input-group\">\n                <div className=\"input-group-prepend\">\n                  <span className=\"input-group-text\" id=\"inputGroupPrepend\">\n                    @\n                  </span>\n                </div>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  className=\"form-control\"\n                  id=\"validationCustomUsername\"\n                  placeholder=\"Username\"\n                  aria-describedby=\"inputGroupPrepend\"\n                  onChange={this.onChangeControlText}\n                  value={this.state.username}\n                  disabled={this.state.isLoading}\n                  required\n                />\n                <div className=\"invalid-feedback\">\n                  Please choose a username.\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-3 mb-3\">\n              <label htmlFor=\"password\">Password</label>\n              <input\n                name=\"password\"\n                type=\"password\"\n                onChange={this.onChangeControlText}\n                value={this.state.password}\n                className=\"form-control\"\n                placeholder=\"Password\"\n                disabled={this.state.isLoading}\n                required\n              />\n            </div>\n            <div className=\"col-md-3 mb-3\">\n              <label htmlFor=\"confirm_password\">Confirm Password</label>\n              <input\n                name=\"confirm_password\"\n                type=\"password\"\n                onChange={this.onChangeControlText}\n                value={this.state.confirm_password}\n                className=\"form-control\"\n                placeholder=\"Confirm Password\"\n                disabled={this.state.isLoading}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"col-md-6 mb-3\">\n              <label htmlFor=\"fullname\">Full name</label>\n              <input\n                name=\"fullname\"\n                type=\"text\"\n                onChange={this.onChangeControlText}\n                value={this.state.fullname}\n                className=\"form-control\"\n                placeholder=\"Full name\"\n                disabled={this.state.isLoading}\n                required\n              />\n            </div>\n            <div className=\"col-md-6 mb-3\">\n              <label htmlFor=\"email\">Email</label>\n              <input\n                name=\"email\"\n                type=\"text\"\n                onChange={this.onChangeControlText}\n                value={this.state.email}\n                className=\"form-control\"\n                placeholder=\"Email\"\n                disabled={this.state.isLoading}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"col-md-12 mb-3\">\n              <label htmlFor=\"photo_credit_name\">\n                The name you prefer to use for credit attribution\n              </label>\n              <input\n                name=\"photo_credit_name\"\n                type=\"text\"\n                onChange={this.onChangeProfileControlText}\n                value={this.state.profile.photo_credit_name}\n                className=\"form-control\"\n                placeholder=\"Photo Credit Name\"\n                disabled={this.state.isLoading}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"col-md-12 mb-3\">\n              <label htmlFor=\"current_credit_name_id\">\n                The name currently used for credit attribution in OrchidRoots.\n                Leave blank if you do not see your name iin the list. WARNING:\n                your account will be removed if you selected name that is not\n                yours.\n              </label>\n              <select\n                className=\" form-control\"\n                name=\"current_credit_name_id\"\n                onChange={this.onChangeProfileControlText}\n                value={this.state.profile.current_credit_name_id}\n              >\n                <option value=\"-1\" selected>\n                  --- Select your credit attribution ---\n                </option>\n                {this.props.photographers.map((photographer) => {\n                  return (\n                    <option value={photographer.author_id}>\n                      {photographer.displayname}\n                    </option>\n                  );\n                })}\n              </select>\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"col-md-12 mb-3\">\n              <label htmlFor=\"specialty\">\n                Orchid related Interest. List genera or alliances of your\n                interest\n              </label>\n              <input\n                name=\"specialty\"\n                type=\"text\"\n                onChange={this.onChangeProfileControlText}\n                value={this.state.profile.specialty}\n                className=\"form-control\"\n                placeholder=\"Specialty\"\n                disabled={this.state.isLoading}\n                required\n              />\n            </div>\n          </div>\n\n          <div className=\"form-row\">\n            <div className=\"col-md-12 mb-3\">\n              <label htmlFor=\"country\">Select a country:</label>\n              <select\n                className=\" form-control\"\n                name=\"country\"\n                onChange={this.onChangeProfileControlText}\n                value={this.state.profile.country}\n              >\n                <option value=\"-1\" selected>\n                  --- Select Country ---\n                </option>\n                {this.props.countries.map((country) => {\n                  return <option value={country.pk}>{country.country}</option>;\n                })}\n              </select>\n            </div>\n          </div>\n\n          <div className=\"error text-danger my-1\">{this.state.errors}</div>\n          {this.state.isLoading ? (\n            <button className=\"btn btn-warning\" type=\"button\" disabled>\n              <span\n                className=\"spinner-border spinner-border-sm\"\n                role=\"status\"\n                aria-hidden=\"true\"\n              ></span>\n              Loading...\n            </button>\n          ) : (\n            <button type=\"submit\" className=\"btn btn-warning\">\n              Submit\n            </button>\n          )}\n\n          <div className=\"login_message row d-flex justify-content-between align-items-center\">\n            <div>\n              Have an account? <Link to=\"/login\">Login</Link>\n            </div>\n              <MyFaceBookLogin/>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default Signup;\n","import { connect } from \"react-redux\";\nimport {\n  getCountries,\n  getPhotographers,\n  signupInit,\n} from \"../../Actions/authActions\";\nimport Signup from \"./Signup\";\nimport { withRouter } from \"react-router\";\n\nconst mapDispatchToProps = {\n  getCountries,\n  getPhotographers,\n  signupInit,\n};\n\nconst mapStateToProps = (state) => ({\n  errors: state.authReducer.signupErrors,\n  countries: state.authReducer.countries,\n  photographers: state.authReducer.photographers,\n});\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Signup));\n","import React, { Component } from \"react\";\nimport ReactCodeInput from \"react-verification-code-input\";\nimport { Link } from \"react-router-dom\";\nimport { errorsToList } from \"../../constants\";\n\nclass Verification extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      code: \"\",\n      email: \"\",\n    };\n  }\n\n  onCompleteCodeInput = (value) => {\n    this.setState({ code: value, isLoading: true });\n    this.props.verificationInit(\n      { code: value, email: this.props.email },\n      this.props.history,\n      this.onVerificationFail,\n      this.onVerificationSuccess\n    );\n  };\n  onVerificationFail = (errors) => {\n    errors = errorsToList(errors);\n    this.setState({ errors: errors, isLoading: false });\n  };\n  onVerificationSuccess = () => {\n    this.setState({ isLoading: false });\n  };\n  onClickResendCode = () => {\n    this.props.resendVerificationInit(\n      { email: this.props.email },\n      this.onResendVerificationFail,\n      this.onResendVerificationSuccess\n    );\n  };\n  onResendVerificationFail = (errors) => {\n    errors = errorsToList(errors);\n    alert(\"Verification Email Error \\n \" + errors);\n  };\n  onResendVerificationSuccess = (response) => {\n    alert(errorsToList(response));\n  };\n\n  render() {\n    return (\n      <div className=\"loginform col-md-6\">\n        <h3>Email Verification</h3>\n        <h5>Please check your email and enter your verification code.</h5>\n\n        <form onSubmit={this.submit}>\n          <label htmlFor=\"exampleInputPassword1\">Verification Code</label>\n          <div className=\"form-group \">\n            <ReactCodeInput\n              onComplete={this.onCompleteCodeInput}\n              value={this.state.code}\n              disabled={this.state.isLoading}\n              fields={5}\n            />\n          </div>\n          <div>\n            Didn't recive the code{\" \"}\n            <Link to={this.props.myroute} onClick={this.onClickResendCode}>\n              resend\n            </Link>\n          </div>\n          <div className=\"error text-danger my-1\">{this.state.errors}</div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default Verification;\n","import { connect } from \"react-redux\";\nimport {\n  verificationInit,\n  resendVerificationInit,\n} from \"../../Actions/authActions\";\nimport Verification from \"./Verification\";\nimport { withRouter } from \"react-router\";\n\nconst mapDispatchToProps = {\n  verificationInit,\n  resendVerificationInit,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    email: state.authReducer.signUpEmail,\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(Verification)\n);\n","import React, { Component } from \"react\";\nimport ReactCodeInput from \"react-verification-code-input\";\nimport { Link } from \"react-router-dom\";\nimport { errorsToList } from \"../../constants\";\n\nclass ResetPassword extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      code: \"\",\n      new_password: \"\",\n      show_new_password: false,\n    };\n  }\n\n  onCompleteCodeInput = (value) => {\n    this.setState({ code: value, isLoading: true });\n    this.props.forgetPasswordVerifyCode(\n      { code: value, username: this.props.username },\n      this.forgetPasswordVerifyCodeFail,\n      this.forgetPasswordVerifyCodeSuccess\n    );\n  };\n  forgetPasswordVerifyCodeFail = (errors) => {\n    errors = errorsToList(errors);\n    this.setState({ errors: errors, isLoading: false });\n  };\n  forgetPasswordVerifyCodeSuccess = () => {\n    this.setState({ show_new_password: true, isLoading: false });\n  };\n  onClickResendCode = () => {\n    this.props.forgetPasswordSendCodeInit(\n      { username: this.props.username },\n      this.onResendResetPasswordFail,\n      this.onResendResetPasswordSuccess\n    );\n  };\n  onResendResetPasswordFail = (errors) => {\n    errors = errorsToList(errors);\n    alert(\"ResetPassword Email Error \\n \" + errors);\n  };\n  onResendResetPasswordSuccess = (response) => {\n    alert(errorsToList(response));\n  };\n\n  changePassword = (event) => {\n    this.setState({ new_password: event.target.value });\n  };\n  submit = (event) => {\n    event.preventDefault();\n    this.setState({ isLoading: true });\n    this.props.resetPassword(\n      {\n        code: this.state.code,\n        new_password: this.state.new_password,\n        username: this.props.username,\n      },\n      this.props.history\n    );\n  };\n\n  render() {\n    return (\n      <div className=\"loginform col-md-6\">\n        {!this.state.show_new_password && (\n          <>\n            <h3>Reset Code Sent Successfully!</h3>\n            <h5>\n              Please check your email inbox releated with this account '\n              {this.props.username}' and enter your reset password code.\n            </h5>\n          </>\n        )}\n        {this.state.show_new_password && (\n          <>\n            <h3>Correct Code!</h3>\n            <h5>\n              Please set a new password for your accout '{this.props.username}'.\n            </h5>\n          </>\n        )}\n        <form onSubmit={this.submit}>\n          {!this.state.show_new_password && (\n            <div className=\"form-group \">\n              <label htmlFor=\"exampleInputPassword1\">Reset Password Code</label>\n              <ReactCodeInput\n                onComplete={this.onCompleteCodeInput}\n                value={this.state.code}\n                disabled={this.state.isLoading}\n                fields={5}\n              />\n            </div>\n          )}\n          <br />\n          {this.state.show_new_password && (\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleInputPassword1\">New Password</label>\n              <input\n                name=\"password\"\n                type=\"password\"\n                onChange={this.changePassword}\n                value={this.state.new_password}\n                className=\"form-control\"\n                placeholder=\"New Password\"\n                disabled={this.state.isLoading}\n                required\n              />\n            </div>\n          )}\n          {!this.state.show_new_password && (\n            <div className=\"forgetpassword_message row d-flex justify-content-between align-items-center\">\n              <div>\n                Didn't recive the code{\" \"}\n                <Link to={this.props.myroute} onClick={this.onClickResendCode}>\n                  resend\n                </Link>\n              </div>\n              <div>\n                Try another username or email ?{\" \"}\n                <Link to=\"/forgetpassword\">Change</Link>\n              </div>\n              <div></div>\n            </div>\n          )}\n          {this.state.show_new_password &&\n            (this.state.isLoading ? (\n              <button className=\"btn btn-warning\" type=\"button\" disabled>\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n                Loading...\n              </button>\n            ) : (\n              <button type=\"submit\" className=\"btn btn-warning\">\n                Submit\n              </button>\n            ))}\n\n          <div className=\"error text-danger my-1\">{this.state.errors}</div>\n        </form>\n      </div>\n    );\n  }\n}\nexport default ResetPassword;\n","import { connect } from \"react-redux\";\nimport {\n  forgetPasswordVerifyCode,\n  forgetPasswordSendCodeInit,\n  resetPassword,\n} from \"../../Actions/authActions\";\nimport ResetPassword from \"./ResetPassword\";\nimport { withRouter } from \"react-router\";\n\nconst mapDispatchToProps = {\n  forgetPasswordSendCodeInit,\n  forgetPasswordVerifyCode,\n  resetPassword,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.authReducer.resetPasswordUsername,\n  };\n};\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(ResetPassword)\n);\n","import React from \"react\";\nimport APP from \"./components/App/App\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport Login from \"./components/Login\";\nimport ForgetPassword from \"./components/ForgetPassword\";\nimport Signup from \"./components/Signup\";\nimport Verification from \"./components/Verification\";\nimport { isLoggedIn } from \"./constants\";\nimport ResetPassword from \"./components/ResetPassword\";\n\nexport default (props) => (\n  <Router>\n    <div>\n      <Route exact path=\"/\">\n        <APP />\n      </Route>\n      {!isLoggedIn() ? (\n        <>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/forgetpassword\">\n            <ForgetPassword />\n          </Route>\n          <Route exact path=\"/resetpassword\">\n            <ResetPassword />\n          </Route>\n          <Route exact path=\"/signup\">\n            <Signup />\n          </Route>\n          <Route exact path=\"/verification\">\n            <Verification />\n          </Route>\n        </>\n      ) : (\n        <Redirect to=\"/\" />\n      )}\n    </div>\n  </Router>\n);\n","import React from \"react\";\nimport \"./Header.css\";\nimport { connect } from \"react-redux\";\nimport { logoutInit } from \"../../Actions/authActions\";\nimport { Link } from \"react-router-dom\";\n\nfunction UserGreeting(props) {\n  return (\n    <>\n      <li className=\"nav-item\">\n        <div className=\"nav-item dropdown\">\n          <a\n            className=\"nav-link dropdown-toggle\"\n            href=\"/\"\n            id=\"navbarDropdown\"\n            role=\"button\"\n            data-toggle=\"dropdown\"\n          >\n            <span style={{ color: \"white\" }}>{/* {{ user }}&nbsp; */}</span>\n          </a>\n          <ul className=\"dropdown-menu\">\n            {/* {% if user.tier.tier == 5 %} */}\n            <li>\n              <a className=\"dropdown-item\" href=\"{% url 'admin:index' %}\">\n                Admin\n              </a>\n            </li>\n            <li>\n              <a\n                className=\"dropdown-item\"\n                href=\"https://analytics.google.com/analytics/web/?utm_source=marketingplatform.google.com&utm_medium=et&utm_campaign=marketingplatform.google.com%2Fabout%2Fanalytics%2F#/realtime/rt-location/a128957305w207417477p200133280/&att=\"\n              >\n                Google Analytics\n              </a>\n            </li>\n            {/* {% endif %} */}\n            <li>\n              <a\n                className=\"dropdown-item\"\n                href=\"{% url 'update_profile' %}?next=/&att=\"\n              >\n                Update profile\n              </a>\n            </li>\n            <li>\n              <Link\n                className=\"dropdown-item\"\n                to={props.myroute}\n                onClick={props.logout}\n              >\n                Logout\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </li>\n    </>\n  );\n}\n\nfunction GuestGreeting(props) {\n  return (\n    <>\n      <li className=\"nav-item\" style={{ marginTop: 8 }}>\n        <a className=\"nav-link\" href=\"/signup\">\n          Register\n        </a>\n      </li>\n      <li className=\"nav-item\" style={{ marginTop: 8 }}>\n        <a className=\"nav-link\" href=\"/login\">\n          Login\n        </a>\n      </li>\n    </>\n  );\n}\nfunction Header(props) {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\n      <div className=\"container-fluid\">\n        <div className=\"navbar-header\">\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#nav-content\"\n            aria-controls=\"nav-content\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <a\n            className=\"navbar-brand mb-0 bannerfont\"\n            href=\"/\"\n            style={{ color: \"#ffff07\", lineHeight: \"11px\" }}\n          >\n            <b>\n              Orchid\n              <br />R<span style={{ fontSize: 18 }}>oots</span>\n            </b>\n            <span\n              style={{ fontSize: 12, color: \"darkgrey\", fontFamily: \"Lucida\" }}\n            >\n              {\" \"}\n              ©2019\n            </span>\n          </a>\n        </div>\n\n        <div className=\"collapse navbar-collapse\" id=\"nav-content\">\n          <ul className=\"navbar-nav\">\n            {props.isLoggedIn ? <UserGreeting {...props} /> : <GuestGreeting />}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\nconst mapStateToProps = (state) => ({\n  isLoggedIn: state.authReducer.isLoggedIn,\n});\nconst mapDispatchToProps = {\n  logout: logoutInit,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import produce from \"immer\";\nimport * as types from \"../actionTypes/authActionTypes\";\n\nconst initialState = {\n  isLoggedIn: false,\n  signUpErrors: [],\n  countries: [],\n  photographers: [],\n  signUpEmail: \"\",\n  resetPasswordUsername: \"\",\n};\n\nconst authReducer = (state = initialState, action) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case types.LOGIN_INIT:\n        draft.isLoggedIn = false;\n        return;\n      case types.LOGIN_SUCCESS:\n        draft.isLoggedIn = true;\n        return;\n      case types.LOGIN_FAILURE:\n        draft.isLoggedIn = false;\n        return;\n\n      case types.LOGOUT_INIT:\n        draft.isLoggedIn = false;\n        return;\n      case types.LOGOUT_DONE:\n        draft.isLoggedIn = false;\n        return;\n\n      case types.GET_COUNTRIES_SUCCESS:\n        draft.countries = action.countries;\n        return;\n      case types.GET_PHOTOGRAPHERS_SUCCESS:\n        draft.photographers = action.photographers;\n        return;\n      case types.SIGNUP_INIT:\n        draft.signUpErrors = [];\n        return;\n      case types.SIGNUP_SUCCESS:\n        draft.signUpEmail = action.email;\n        return;\n      case types.SIGNUP_FAILURE:\n        return;\n\n      case types.FORGET_PASSWORD_SEND_CODE_INIT:\n        return;\n      case types.FORGET_PASSWORD_SEND_CODE_SUCCESS:\n        draft.resetPasswordUsername = action.username;\n        return;\n\n      default:\n        return;\n    }\n  });\n\nexport default authReducer;\n","import { combineReducers } from 'redux'\nimport {  connectRouter } from 'connected-react-router'\n\nimport authReducer from './authReducer'\n\n\nconst createRootReducer = (history) => combineReducers({\n  router: connectRouter(history),\n  authReducer\n})\nexport default createRootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport { createBrowserHistory } from \"history\";\nimport createRootReducer from \"./reducers\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nexport default (url = \"/\") => {\n  // Create a history depending on the environment\n  const history = createBrowserHistory();\n  const middlewares = [routerMiddleware(history), thunk];\n\n  const persistConfig = {\n    key: \"root\",\n    storage,\n    whitelist: [\"authReducer\"],\n  };\n\n  const persistedReducer = persistReducer(\n    persistConfig,\n    createRootReducer(history)\n  );\n\n  const composedEnhancers = compose(applyMiddleware(...middlewares));\n\n  const store = createStore(\n    persistedReducer,\n    window.__PRELOADED_STATE__,\n    composedEnhancers\n  );\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor,\n    history,\n  };\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Router from \"./Router.js\";\nimport Header from \"./components/Header/Header\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport createStore from \"./store\";\nimport { Provider } from \"react-redux\";\n\nimport { ConnectedRouter } from \"connected-react-router\";\n\nconst { store, history } = createStore();\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <Header />\n      <Router />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}